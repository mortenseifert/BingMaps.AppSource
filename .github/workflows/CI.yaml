name: CI

on:
  push:
    paths-ignore:
      - 'README.md'
      - '.github/**'
    branches: [ main ]
  pull_request:
    paths-ignore:
      - 'README.md'
      - '.github/**'
    branches: [ main ]
  workflow_dispatch:

defaults:
  run:
    shell: PowerShell

jobs:
  Settings:
    runs-on: windows-latest
    outputs:
      Settings: ${{steps.settings.outputs.Settings}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Read settings
        uses: freddydk/myghgo/ReadSettings@main
        id: settings
  CheckForUpdates:
    runs-on: windows-latest
    needs: Settings
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for updates to GitHub-Go system files
        uses: freddydk/myghgo/CheckForUpdates@main
        with:
          settings: ${{needs.Settings.outputs.Settings}}
  Secrets:
    runs-on: windows-latest
    needs: Settings
    outputs:
      Secrets: ${{steps.secrets.outputs.Secrets}}
    steps:
      - name: Read secrets
        uses: freddydk/myghgo/ReadSecrets@main
        id: secrets
        env:
          secrets: ${{toJson(secrets)}}
        with:
          settings: ${{needs.Settings.outputs.Settings}}
          secrets: 'licenseFileUrl,insiderSasToken,CodeSignCertificateUrl,CodeSignCertificatePassword,KeyVaultCertificateUrl,KeyVaultCertificatePassword,KeyVaultClientId'
  SeeOutput:
    runs-on: windows-latest
    needs: Secrets
    steps:
    - name: Output
      run: |
        Write-Host "${{ needs.Secrets.outputs.Secrets }}"
  Build:
    runs-on: windows-latest
    needs: [ Settings, Secrets ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run pipeline
        uses: freddydk/myghgo/RunPipeline@main
        with:
          Settings: ${{needs.Settings.outputs.Settings }}
          Secrets: ${{needs.Secrets.outputs.Secrets }}

      - name: Publish test results
        if: success() || failure()
        uses: mikepenz/action-junit-report@v1
        with:
          report_paths: 'TestResults*.xml'
          github_token: ${{ github.token }}
          
      - name: Publish artifacts - apps
        uses: actions/upload-artifact@v2
        with:
          name: '${{needs.Settings.outputs.repoName}}-Apps-${{needs.Settings.outputs.repoVersion}}.${{needs.Settings.outputs.appBuild}}.${{needs.Settings.outputs.appRevision}}'
          path: output/Apps/
          if-no-files-found: ignore

      - name: Publish artifacts - test apps
        uses: actions/upload-artifact@v2
        with:
          name: '${{needs.Settings.outputs.repoName}}-TestApps-${{needs.Settings.outputs.repoVersion}}.${{needs.Settings.outputs.appBuild}}.${{needs.Settings.outputs.appRevision}}'
          path: output/TestApps/
          if-no-files-found: ignore

      - name: Publish artifacts - test results
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: testresults
          path: TestResults.xml
          if-no-files-found: ignore

      - name: Cleanup
        if: always()
        uses: freddydk/myghgo/PipelineCleanup@main
