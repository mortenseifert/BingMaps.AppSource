name: Create Online Dev. Environment

on:
  workflow_dispatch:
    inputs:
      environmentName:
        description: Name of the online environment
        required: true
      reUseExistingEnvironment:
        description: Reuse environment if it exists
        required: false
        default: 'N'
      directCommit:
        description: Direct COMMIT (Y/N)
        required: false
        default: 'N'

defaults:
  run:
    shell: PowerShell

jobs:
  CreateEnvironment:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Read settings
        uses: freddydk/myghgo/ReadSettings@main
        with:
          get: KeyVaultName,adminCenterApiCredentialsSecretName

      - name: Read secrets
        uses: freddydk/myghgo/ReadSecrets@main
        env:
          secrets: ${{ toJson(secrets) }}
        with:
          keyVaultName: ${{ env.KEYVAULTNAME }}
          secrets: 'adminCenterApiCredentials=${{ env.adminCenterApiCredentialsSecretName }}'

      - name: Check AdminCenterApiCredentials / Initiate Device Login (open to see code)
        run: |
          $adminCenterApiCredentials = $env:adminCenterApiCredentials
          if ($adminCenterApiCredentials) {
            Write-Host "AdminCenterApiCredentials provided!"
          }
          else {
            Write-Host "AdminCenterApiCredentials not provided, initiating Device Code flow"
            $gitHubGoHelperPath = "$([System.IO.Path]::GetTempFileName()).ps1"
            $webClient = New-Object System.Net.WebClient
            $webClient.CachePolicy = New-Object System.Net.Cache.RequestCachePolicy -argumentList ([System.Net.Cache.RequestCacheLevel]::NoCacheNoStore)
            $webClient.DownloadFile('https://raw.githubusercontent.com/freddydk/myghgo/main/GitHub-Go-Helper.ps1', $gitHubGoHelperPath)
            . $gitHubGoHelperPath -local
            DownloadAndImportBcContainerHelper
            $authContext = New-BcAuthContext -includeDeviceLogin -deviceLoginTimeout ([TimeSpan]::FromSeconds(0))
            MaskValueInLog -value $authContext.deviceCode
            Add-Content -Path $env:GITHUB_ENV -Value "adminCenterApiCredentials={""deviceCode"":""$($authContext.deviceCode)""}"
          }

      - name: Create Development Environment
        uses: freddydk/myghgo/CreateDevelopmentEnvironment@main
        with:
          environmentName: ${{ github.event.inputs.environmentName }} 
          reUseExistingEnvironment: ${{ github.event.inputs.reUseExistingEnvironment }} 
          adminCenterApiCredentials: ${{ env.adminCenterApiCredentials }} 
