name: Build

on:
  workflow_call:
    inputs:
      version:
        required: false
        type: string
        default: 'current'
      runson:
        required: false
        type: string
        default: 'windows-latest'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for updates to GitHub-Go system files
        uses: freddydk/myghgo/CheckForUpdates@main

      - name: Read settings
        uses: freddydk/myghgo/ReadSettings@main
          get: RepoVersion,RepoName,AppBuild,AppRevision,KeyVaultName,LicenseFileUrlSecretName,InsiderSasTokenSecretName,CodeSignCertificateUrlSecretName,CodeSignCertificatePasswordSecretName,KeyVaultCertificateUrlSecretName,KeyVaultCertificatePasswordSecretName,KeyVaultClientIdSecretName

      - name: Read secrets
        uses: freddydk/myghgo/ReadSecrets@main
        env:
          secrets: ${{ toJson(secrets) }}
        with:
          keyVaultName: ${{ env.KEYVAULTNAME }}
          secrets: 'licenseFileUrl=${{ env.LICENSEFILEURLSECRETNAME }},insiderSasToken=${{ env.INSIDERSASTOKENSECRETNAME }},CodeSignCertificateUrl=${{ env.CodeSignCertificateUrlSecretName }},CodeSignCertificatePassword=${{ env.CodeSignCertificatePasswordSecretName }},KeyVaultCertificateUrl=${{ env.KeyVaultCertificateUrlSecretName }},KeyVaultCertificatePassword=${{ env.KeyVaultCertificatePasswordSecretName }},KeyVaultClientId=${{ env.KeyVaultClientIdSecretName }}'

      - name: Run pipeline
        uses: freddydk/myghgo/RunPipeline@main
        with:
          insiderSasToken: ${{ env.InsiderSasToken }}
          licenseFileUrl: ${{ env.LicenseFileUrl }}
          CodeSignCertificateUrl: ${{ env.CodeSignCertificateUrl }}
          CodeSignCertificatePw: ${{ env.CodeSignCertificatePassword }}
          KeyVaultCertificateUrl: ${{ env.KeyVaultCertificateUrl }}
          KeyVaultCertificatePw: ${{ env.KeyVaultCertificatePassword }}
          KeyVaultClientId: ${{ env.KeyVaultClientId }}
          appBuild: ${{ env.appBuild }}
          appRevision: ${{ env.appRevision }}
          version: Current

      - name: Publish test results
        if: success() || failure()
        uses: mikepenz/action-junit-report@v1
        with:
          report_paths: 'TestResults*.xml'
          github_token: ${{ github.token }}
          
      - name: Publish artifacts - apps
        uses: actions/upload-artifact@v2
        with:
          name: '${{ env.repoName}}-Apps-${{ env.repoVersion}}.${{ env.appBuild}}.${{ env.appRevision}}'
          path: output/Apps/
          if-no-files-found: ignore

      - name: Publish artifacts - test apps
        uses: actions/upload-artifact@v2
        with:
          name: '${{ env.repoName}}-TestApps-${{ env.repoVersion}}.${{ env.appBuild}}.${{ env.appRevision}}'
          path: output/TestApps/
          if-no-files-found: ignore

      - name: Publish artifacts - test results
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: testresults
          path: TestResults.xml
          if-no-files-found: ignore

